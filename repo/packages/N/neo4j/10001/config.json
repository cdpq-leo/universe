{
  "type": "object",
  "properties": {
    "service": {
      "description": "Neo4j specific configuration properties",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of this core instance",
          "type": "string",
          "default": "neo4j/core"
        },
        "cpus": {
          "description": "CPU shares allocated to one neo4j core instance.",
          "type": "number",
          "default": 2.0,
          "minimum": 1.0
        },
        "mem": {
          "description": "Memory [mb] allocated to one neo4j core instance.",
          "type": "number",
          "default": 6000.0,
          "minimum": 1000.0
        },
        "disk": {
          "description": "Disk size [mb] allocated to one neo4j core instance.",
          "type": "number",
          "default": 8000.0,
          "minimum": 4000.0
        },
        "instances": {
          "description": "Amount of neo4j core instances.",
          "type": "number",
          "default": 3,
          "minimum": 3
        }
      },
      "required": [
        "name",
        "cpus",
        "mem",
        "disk",
        "instances"
      ]
    },
    "volumes": {
      "description": "Create a stateful service by configuring a persistent volume. Persistent volumes enable instances to be restarted without data loss.",
      "type": "object",
      "properties": {
        "local_persistant_volume": {
          "type": "object",
          "description": "A locally persistent volume based upon the physical disks installed in the agent which has the capabilities of a single disk.",
          "properties": {
            "container_path": {
              "type": "string",
              "description": "The path where your application will read and write data. This must be a single-level path relative to the container.",
              "default": "data"
            },
            "size_MiB": {
              "type": "number",
              "default": 8000.0,
              "minimum": 4000.0
            }
          }
        },
        "host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "default": "data"
            },
            "container_path": {
              "type": "string",
              "description": "If you are using the Mesos containerizer, this must be a single-level path relative to the container.",
              "default": "/data"
            },
            "mode": {
              "type": "string",
              "default": "RW",
              "enum": [
                "RW",
                "RO"
              ]
            }
          }
        }
      }
    },
    "health_checks": {
      "type": "object",
      "description": "Health checks may be specified per application to be run against the application's instances.",
      "properties": {
        "HTTP_protocol": {
          "type": "object",
          "properties": {
            "port": {
              "type": "number",
              "default": 7474
            },
            "path": {
              "type": "string",
              "description": "Enter a path that is reachable in your service and where you expect a response code between 200 and 399.",
              "default": "/"
            },
            "advanced_health_checking_settings": {
              "type": "object",
              "properties": {
                "grace_periods": {
                  "type": "number",
                  "description": "Health check failures are ignored within this number of seconds or until the instance becomes healthy for the first time.",
                  "default": 240
                },
                "intervals": {
                  "type": "number",
                  "description": "Number of seconds to wait between health checks.",
                  "default": 10
                },
                "timeout": {
                  "type": "number",
                  "description": "Number of seconds after which a health check is considered a failure regardless of the response.",
                  "default": 10
                },
                "max_failures": {
                  "type": "number",
                  "description": "Number of consecutive health check failures after which the unhealthy instance should be killed. HTTP & TCP health checks: If this value is 0, instances will not be killed if they fail the health check.",
                  "default": 10
                }
              }
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "properties": {
        "auth_username": {
          "description": "Username for authentication",
          "type": "string",
          "default": "neo4j"
        },
        "auth_password": {
          "description": "Password for authentication",
          "type": "string",
          "default": "dcos"
        },
        "expected_cluster_size": {
          "description": "Expected core cluster size.",
          "type": "number",
          "default": 3,
          "minimum": 3
        },
        "network_name": {
          "description": "The name of your existing DC/OS overlay network.",
          "type": "string",
          "default": "dcos"
        }
      },
      "required": [
        "expected_cluster_size",
        "network_name"
      ]
    }
  }
}