{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "{{resource.assets.container.docker.image}}",
      "forcePullImage": true
    },
    "portMappings": [
      {
        {{#networking.service_endpoint_01.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoint_01.load_balance_port}}"
        },
        {{/networking.service_endpoint_01.load_balance_port}}
        "containerPort": {{networking.service_endpoint_01.container_port}},
        "hostPort": {{networking.service_endpoint_01.host_port}},
        "protocol": "{{networking.service_endpoint_01.protocol}}"
      },
      {
        {{#networking.service_endpoint_02.load_balance_port}}
        "labels": {
            "VIP_1": "/{{service.name}}:{{networking.service_endpoint_02.load_balance_port}}"
        },
        {{/networking.service_endpoint_02.load_balance_port}}
        "containerPort": {{networking.service_endpoint_02.container_port}},
        "hostPort": {{networking.service_endpoint_02.host_port}},
        "protocol": "{{networking.service_endpoint_02.protocol}}"
      },
      {
        {{#networking.service_endpoint_03.load_balance_port}}
        "labels": {
            "VIP_2": "/{{service.name}}:{{networking.service_endpoint_03.load_balance_port}}"
        },
        {{/networking.service_endpoint_03.load_balance_port}}
        "containerPort": {{networking.service_endpoint_03.container_port}},
        "hostPort": {{networking.service_endpoint_03.host_port}},
        "protocol": "{{networking.service_endpoint_03.protocol}}"
      },
      {
        {{#networking.service_endpoint_04.load_balance_port}}
        "labels": {
            "VIP_3": "/{{service.name}}:{{networking.service_endpoint_04.load_balance_port}}"
        },
        {{/networking.service_endpoint_04.load_balance_port}}
        "containerPort": {{networking.service_endpoint_04.container_port}},
        "hostPort": {{networking.service_endpoint_04.host_port}},
        "protocol": "{{networking.service_endpoint_04.protocol}}"
      },
      {
        {{#networking.service_endpoint_05.load_balance_port}}
        "labels": {
            "VIP_4": "/{{service.name}}:{{networking.service_endpoint_05.load_balance_port}}"
        },
        {{/networking.service_endpoint_05.load_balance_port}}
        "containerPort": {{networking.service_endpoint_05.container_port}},
        "hostPort": {{networking.service_endpoint_05.host_port}},
        "protocol": "{{networking.service_endpoint_05.protocol}}"
      },
      {
        {{#networking.service_endpoint_06.load_balance_port}}
        "labels": {
            "VIP_5": "/{{service.name}}:{{networking.service_endpoint_06.load_balance_port}}"
        },
        {{/networking.service_endpoint_06.load_balance_port}}
        "containerPort": {{networking.service_endpoint_06.container_port}},
        "hostPort": {{networking.service_endpoint_06.host_port}},
        "protocol": "{{networking.service_endpoint_06.protocol}}"
      },
      {
        {{#networking.service_endpoint_07.load_balance_port}}
        "labels": {
            "VIP_6": "/{{service.name}}:{{networking.service_endpoint_07.load_balance_port}}"
        },
        {{/networking.service_endpoint_07.load_balance_port}}
        "containerPort": {{networking.service_endpoint_07.container_port}},
        "hostPort": {{networking.service_endpoint_07.host_port}},
        "protocol": "{{networking.service_endpoint_07.protocol}}"
      },
      {
        {{#networking.service_endpoint_08.load_balance_port}}
        "labels": {
            "VIP_7": "/{{service.name}}:{{networking.service_endpoint_08.load_balance_port}}"
        },
        {{/networking.service_endpoint_08.load_balance_port}}
        "containerPort": {{networking.service_endpoint_08.container_port}},
        "hostPort": {{networking.service_endpoint_08.host_port}},
        "protocol": "{{networking.service_endpoint_08.protocol}}"
      }
    ],
    "volumes": [
      {{! backup_volume}}
      {{#volumes.backup_volume.local_persistant_volume.container_path}}
      {
         "persistent": {
            "type": {{volumes.backup_volume.local_persistant_volume.type}},
            "size": {{volumes.backup_volume.local_persistant_volume.size_MiB}},
            "constraints": {{volumes.backup_volume.local_persistant_volume.constraints}},
            "profileName": {{volumes.backup_volume.local_persistant_volume.profileName}}
         },
         "mode": "RW",
         "containerPath": "{{volumes.backup_volume.local_persistant_volume.container_path}}",
      }
      {{/volumes.backup_volume.local_persistant_volume.container_path}}
      {{^volumes.backup_volume.local_persistant_volume.container_path}}
      {
        "containerPath": "{{volumes.backup_volume.host_volume.container_path}}",
        "hostPath": "{{volumes.backup_volume.host_volume.host_path}}",
        "mode": "RW"
      }
      {{/volumes.backup_volume.local_persistant_volume.container_path}}
      ,
      {{! data_volume}}
      {{#volumes.data_volume.local_persistant_volume.container_path}}
      {
         "persistent": {
            "type": {{volumes.data_volume.local_persistant_volume.type}},
            "size": {{volumes.data_volume.local_persistant_volume.size_MiB}},
            "constraints": {{volumes.data_volume.local_persistant_volume.constraints}},
            "profileName": {{volumes.data_volume.local_persistant_volume.profileName}}
         },
         "mode": "RW",
         "containerPath": "{{volumes.data_volume.local_persistant_volume.container_path}}",
      }
      {{/volumes.data_volume.local_persistant_volume.container_path}}
      {{^volumes.data_volume.local_persistant_volume.container_path}}
      {
        "containerPath": "{{volumes.data_volume.host_volume.container_path}}",
        "hostPath": "{{volumes.data_volume.host_volume.host_path}}",
        "mode": "RW"
      }
      {{/volumes.data_volume.local_persistant_volume.container_path}}
      ,
      {{! external_volume}}
      {{#volumes.external_volume.local_persistant_volume.container_path}}
      {
         "persistent": {
            "type": {{volumes.external_volume.local_persistant_volume.type}},
            "size": {{volumes.external_volume.local_persistant_volume.size_MiB}},
            "constraints": {{volumes.external_volume.local_persistant_volume.constraints}},
            "profileName": {{volumes.external_volume.local_persistant_volume.profileName}}
         },
         "mode": "RW",
         "containerPath": "{{volumes.external_volume.local_persistant_volume.container_path}}",
      }
      {{/volumes.external_volume.local_persistant_volume.container_path}}
      {{^volumes.external_volume.local_persistant_volume.container_path}}
      {
        "containerPath": "{{volumes.external_volume.host_volume.container_path}}",
        "hostPath": "{{volumes.external_volume.host_volume.host_path}}",
        "mode": "RW"
      }
      {{/volumes.external_volume.local_persistant_volume.container_path}}
    ]
  },
  "healthChecks": [
    {
      "portIndex": 0,
      "protocol": "MESOS_HTTP",
      "path": "{{networking.marathon_lb.vhost}}"
    }
  ],
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "MARKLOGIC_USR": {
      "secret": "marklogicuser"
    },
    "MARKLOGIC_PWD": {
      "secret": "marklogicpassword"
    },
    "MARKLOGIC_AUTH_MODE": "{{environment.marklogic.auth_mode}}",
    "MARKLOGIC_SEC_REALM": "{{environment.marklogic.realm}}",
    "HDFS_CONFIG_URL": "{{environment.hdfs.config_url}}"
  },
  "secrets": {
    "marklogicuser": {
      "source": "{{environment.marklogic.username}}"
    },
    "marklogicpassword": {
      "source": "{{environment.marklogic.password}}"
    }
  },
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
    "HAPROXY_0_STICKY": "true"
    "HAPROXY_0_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    "HAPROXY_3_GROUP": "external",
    "HAPROXY_3_ENABLED": "true",
    "HAPROXY_3_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_3_VHOST": "{{networking.marathon_lb.vhost}}",
    "HAPROXY_3_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    "HAPROXY_3_STICKY": "true",
    "HAPROXY_4_GROUP": "external",
    "HAPROXY_4_ENABLED": "true",
    "HAPROXY_4_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_4_VHOST": "{{networking.marathon_lb.vhost}}",
    "HAPROXY_4_STICKY": "true",
    "HAPROXY_5_ENABLED": "true",
    "HAPROXY_5_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_5_GROUP": "external",
    "HAPROXY_5_VHOST": "{{networking.marathon_lb.vhost}}",
    "HAPROXY_5_STICKY": "true"
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "fetch": [
  {{#fetch.artifact_URI.uri}}
  {
    "uri": "{{fetch.artifact_URI.uri}}",
    "extract": {{fetch.artifact_URI.extract}},
    "executable": {{fetch.artifact_URI.executable}},
    "cache": {{fetch.artifact_URI.cache}}
  }
  {{/fetch.artifact_URI.uri}}
  ],
 "upgradeStrategy": {
   "maximumOverCapacity": 0,
   "minimumHealthCapacity": 0.5
 }
}
