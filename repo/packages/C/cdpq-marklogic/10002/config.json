{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS marklogic service specifications",
      "properties": {
        "name": {
          "description": "Name of SmartSearchService instances as seen in DC/OS.",
          "type": "string",
          "default": "marklogic"
        },
        "cpus": {
          "description": "Number of logical cores to allocate to each service instance.",
          "type": "number",
          "default": 1
        },
        "disk": {
          "description": "Disk",
          "type": "number",
          "default": 0
        },
        "mem": {
          "description": "Memory in Mb to allocate to each service instance.",
          "type": "number",
          "default": 4096
        }
      }
    },
    "networking": {
      "type": "object",
      "description": "Configure the networking for your service.",
      "properties": {
        "marathon_lb": {
          "type": "object",
          "description": "Marathon-lb ports config",
          "properties": {
            "vhost": {
              "description": "Virtual host.",
              "type": "string",
              "default": ""
            },
            "port0": {
              "description": "Health check",
              "type": "number",
              "default": 10195
            },
            "port1": {
              "description": "Foreign bind port",
              "type": "number",
              "default": 10196
            },
            "port2": {
              "description": "Bind port",
              "type": "number",
              "default": 10197
            },
            "port3": {
              "description": "App-Services (Documents)",
              "type": "number",
              "default": 10198
            },
            "port4": {
              "description": "Admin",
              "type": "number",
              "default": 10199
            },
            "port5": {
              "description": "Manage",
              "type": "number",
              "default": 10200
            },
            "port6": {
              "description": "App-Services (Development)",
              "type": "number",
              "default": 10201
            },
            "port7": {
              "description": "App-Services (Production)",
              "type": "number",
              "default": 10202
            }
          }
        }
      }
    },
    "volumes": {
      "type": "object",
      "properties": {
        "backup_host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "description": "Path on the host filesystem to the location of the data you mounted",
              "default": "/var/lib/backup"
            },
            "container_path": {
              "type": "string",
              "description": "Path, in the container, where you wish to have the data mounted",
              "default": "/backup"
            },
            "mode": {
              "type": "string",
              "default": "RW",
              "enum": [
                "RW",
                "RO"
              ]
            }
          }
        },
        "data_host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "description": "Path on the host filesystem to the location of the data you mounted",
              "default": "/var/lib/data"
            },
            "container_path": {
              "type": "string",
              "description": "Path, in the container, where you wish to have the data mounted",
              "default": "/data"
            },
            "mode": {
              "type": "string",
              "default": "RW",
              "enum": [
                "RW",
                "RO"
              ]
            }
          }
        },
        "external_host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "description": "Path on the host filesystem to the location of the data you mounted",
              "default": "/var/lib/external"
            },
            "container_path": {
              "type": "string",
              "description": "Path, in the container, where you wish to have the data mounted",
              "default": "/external"
            },
            "mode": {
              "type": "string",
              "default": "RW",
              "enum": [
                "RW",
                "RO"
              ]
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "Environment configuration",
      "properties": {
        "marklogic": {
          "type": "object",
          "description": "Marklogic configuration",
          "properties": {
            "username": {
              "description": "Admin username",
              "type": "string",
              "default": "admin"
            },
            "password": {
              "description": "Admin password",
              "type": "string",
              "default": "dcos"
            },
            "auth_mode": {
              "description": "Auth mode",
              "type": "string",
              "default": "digest"
            },
            "realm": {
              "description": "Realm",
              "type": "string",
              "default": "public"
            }
          },
          "required": [
            "username",
            "password"
          ]
        },
        "hdfs": {
          "type": "object",
          "description": "HDFS config",
          "properties": {
            "config_url": {
              "description": "Base URL that serves HDFS config files (core-site.xml and hdfs-site.xml)",
              "type": "string",
              "default": ""
            }
          }
        }
      }
    }
  }
}