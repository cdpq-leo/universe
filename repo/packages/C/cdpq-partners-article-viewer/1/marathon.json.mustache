{
   "id": "{{service.name}}",
   "cpus": {{service.cpus}},
   "mem": {{service.mem}},
   "disk":{{service.disk}},
   "instances": {{service.instances}},
   "fetch": [
    {
      "uri": "{{service.artifact_URI.uri}}",
      "extract": {{service.artifact_URI.extract}},
      "executable": {{service.artifact_URI.executable}},
      "cache": {{service.artifact_URI.cache}}
    }
   ],
   "container":{
      "type": "DOCKER",
      "docker":{
         "image":"{{resource.assets.container.docker.image}}",
         "forcePullImage":true,
         "privileged": false
      },
      "volumes": [],
      "portMappings":[
         {
            "containerPort": {{networking.service_endpoints.container_port}},
            "hostPort": {{networking.service_endpoints.host_port}},
            "protocol": "{{networking.service_endpoints.protocol}}",
            "labels": {
               "VIP_0": "/{{service.name}}:{{networking.service_endpoints.container_port}}"
            },            
            "name": "{{networking.service_endpoints.service_endpoint_name}}",
            "servicePort": {{networking.service_endpoints.service_port}}         
         }
      ] 
   },
   "requirePorts": false,
   "networks":[
      {
         "mode":"container/bridge"
      }
   ],
   "healthChecks": 
   [
    {
      "gracePeriodSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.IP_protocol.advanced_health_checking_settings.max_failures}},
      "delaySeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.delay_seconds}},
      "portIndex": 0,
      "protocol": "{{health_checks.IP_protocol.protocol}}",
      "ipProtocol": "{{health_checks.IP_protocol.IPv4}}"
    }
   ],
   "labels":{
      "DCOS_SERVICE_SCHEME": "http",
      "DCOS_SERVICE_NAME": "{{service.name}}",
      "DCOS_SERVICE_PORT_INDEX": "0",
      "HAPROXY_0_VHOST": "{{environment.HAPROXY_0_VHOST}}",
      "HAPROXY_0_GROUP": "{{environment.HAPROXY_0_GROUP}}"
   },
   "env": {
     "ENDPOINT": "{{environment.ENDPOINT}}"
  },
  "upgradeStrategy": {
    "maximumOverCapacity": 1,
    "minimumHealthCapacity": 1
  }
}