{
  "type": "object",
  "properties": {
    "service": {
      "description": "Service properties for the Nexus service on DC/OS.",
      "type": "object",
      "properties": {
        "name": {
          "description": "The name of this DC/OS service.",
          "type": "string",
          "default": "nexus"
        },
        "cpus": {
          "description": "CPU shares to allocate to Nexus.",
          "type": "number",
          "default": 2.0,
          "minimum": 1.0
        },
        "mem": {
          "description": "Memory (in MB) to allocate to Nexus.",
          "type": "number",
          "default": 2048.0,
          "minimum": 2048.0
        },
        "resource_role": {
          "default": "*",
          "description": "The accepted resource role. Change to \"slave_public\" role if it should run on an public agent.",
          "type": "string"
        }
      },
      "required": [
        "name",
        "cpus",
        "mem"
      ]
    },
    "placement": {
      "type": "object",
      "description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
      "properties": {
        "constraints": {
          "type": "string",
          "description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
          "default": "[]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "region": {
          "type": "string",
          "description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
          "default": "",
          "media": {
            "type": "application/x-region+string"
          }
        }
      }
    },
    "networking": {
      "description": "Networking properties for the Nexus service on DC/OS.",
      "type": "object",
      "properties": {
        "container_port": {
          "description": "Container port number",
          "type": "number",
          "default": 8080
        },
        "host_port": {
          "description": "The host port to map the Nexus service. A value of 0 will randomly assign a value for host port.",
          "type": "number",
          "default": 0
        },
        "pinned_hostname": {
          "description": "An optional DC/OS agent hostname to run this Nexus instance on (e.g. 10.0.0.1). If this is not specified then the task may relaunch on another node than the one it originally ran on.",
          "type": "string"
        },
        "proxy_vhost": {
          "description": "HA Proxy virtual host",
          "type": "string"
        }
      },
      "required": [
        "host_port"
      ]
    },
    "volumes": {
      "description": "Create a stateful service by configuring a persistent volume. Persistent volumes enable instances to be restarted without data loss.",
      "type": "object",
      "properties": {
        "local_persistant_volume": {
          "type": "object",
          "description": "A locally persistent volume based upon the physical disks installed in the agent which has the capabilities of a single disk.",
          "properties": {
            "container_path": {
              "type": "string",
              "description": "The path where your application will read and write data. This must be a single-level path relative to the container ; it cannot contain a forward slash."
            },
            "size_MiB": {
              "type": "number",
              "description": "The size of the persistent volume in MiBs."
            },
            "type": {
              "type": "string",
              "description": "The type of mesos disk resource to use; the valid options are root, path, and mount, corresponding to the valid mesos multi-disk resource types."
            },
            "constraints": {
              "type": "array",
              "description": "Constraints restricting where new persistent volumes should be created. Currently, it is only possible to constrain the path of the disk resource by regular expression.",
              "items": {
                "type": "string"
              },
              "default": []
            },
            "profileName": {
              "type": "string",
              "description": "The storage volume profile. Only volumes with the specified profile are used to launch an application. It this option is not given, any volume (with or without a profile) will be used for launching."
            }
          }
        },
        "host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "description": "Path on the host filesystem to the location of the data you mounted",
              "default": "/var/lib/data"
            },
            "container_path": {
              "type": "string",
              "description": "Path, in the container, where you wish to have the data mounted",
              "default": "/data"
            }
          }
        }
      }
    }
  },
  "required": [
    "service",
    "networking",
    "volumes"
  ]
}