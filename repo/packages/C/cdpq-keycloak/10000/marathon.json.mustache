{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "forcePullImage": true,
      "image": "{{resource.assets.container.docker.image}}",
      "parameters": [],
      "privileged": false
    },
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        },
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        {{#networking.service_endpoints.name}}
        "name": "{{networking.service_endpoints.name}}",
        {{/networking.service_endpoints.name}}
        "protocol": "{{networking.service_endpoints.protocol}}"
      }
    ]
  },
  "env": {
      {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
      {{/placement.region}}
      "PROXY_ADDRESS_FORWARDING": "true",
      "KEYCLOAK_HOSTNAME": "{{environment.KEYCLOAK_HOSTNAME}}",
      "KEYCLOAK_USER": {"secret": "keycloakuser"},
      "KEYCLOAK_PASSWORD": {"secret": "keycloakpassword"},
      "DB_VENDOR": "{{environment.DB_VENDOR}}",
      "DB_ADDR": "{{environment.DB_ADDR}}",
      "DB_PORT": "{{environment.DB_PORT}}",
      "DB_NAME": "{{environment.DB_NAME}}",
      "DB_USER": {"secret": "keycloakdbuser"},
      "DB_PASSWORD": {"secret": "keycloakdbpassword"},
      "PROXY_ADDRESS_FORWARDING": "true"
  },
  "secrets": {
    "keycloakuser": {
      "source": "{{environment.KEYCLOAK_USER_SECRET}}"
    },
    "keycloakpassword": {
      "source": "{{environment.KEYCLOAK_PASSWORD_SECRET}}"
    },
    "keycloakdbuser": {
      "source": "{{environment.DB_USER_SECRET}}"
    },
    "keycloakdbpassword": {
      "source": "{{environment.DB_PASSWORD_SECRET}}"
    }
  },
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "healthChecks": [
    {
      "protocol": "MESOS_HTTP",
  	  "ipProtocol": "IPv4",
      "portIndex": {{health_checks.HTTP_protocol.port_index}},
      {{#networking.marathon_lb_proxy.enabled}}
      {{#networking.marathon_lb_proxy.path}}
      "path": "{{networking.marathon_lb_proxy.path}}",
      {{/networking.marathon_lb_proxy.path}}
      {{/networking.marathon_lb_proxy.enabled}}
      {{^networking.marathon_lb_proxy.enabled}}
      "path": "/{{service.name}}",
      {{/networking.marathon_lb_proxy.enabled}}
      "gracePeriodSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.HTTP_protocol.advanced_health_checking_settings.max_failures}},
      "delaySeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.delay_seconds}}
  	}
  ],
  "fetch": [
  {{#fetch.artifact_URI.uri}}
  {
    "uri": "{{fetch.artifact_URI.uri}}",
    "extract": {{fetch.artifact_URI.extract}},
    "executable": {{fetch.artifact_URI.executable}},
    "cache": {{fetch.artifact_URI.cache}}
  }
  {{/fetch.artifact_URI.uri}}
  ],
  "requirePorts": false,
  "upgradeStrategy": {
    "maximumOverCapacity": 1 ,
    "minimumHealthCapacity": 1
  },
  "killSelection": "YOUNGEST_FIRST",
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0 ,
    "expungeAfterSeconds": 0
  }
}
