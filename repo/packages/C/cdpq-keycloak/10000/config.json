{
    "type": "object",
    "description": "Keycloak, an open source software product to allow single sign-on with Identity Management and Access Management aimed at modern applications and services.",
    "properties": {
      "service": {
          "type": "object",
          "description": "DC/OS service specifications",
          "properties": {
              "name": {
                  "description": "Name of application instance as seen in DC/OS.",
                  "type": "string",
                  "default": "keycloak"
              },
              "instances": {
                  "description": "Number of instances of your service.",
                  "type": "number",
                  "default": 1.0
              },
              "cpus": {
                  "description": "Number of logical cores to allocate to each service instance.",
                  "type": "number",
                  "default": 1
              },
              "mem": {
                  "description": "Memory in Mb to allocate to each service instance.",
                  "type": "number",
                  "default": 1024
              },
              "disk": {
                  "description": "Number of disks to allocate to each service instance.",
                  "type": "number",
                  "default": 0
              },
              "cmd": {
                  "description": "A shell command for your container to execute.",
                  "type": "string",
                  "default": ""
              },
              "back_off_seconds": {
                  "description": "The amount of time (in seconds) before Marathon retries launching a failed task.",
                  "type": "number",
                  "default": 1.0
              },
              "back_off_factor": {
                  "description": "The multiplicand to apply to the backoffSeconds value.",
                  "type": "number",
                  "default": 1.15
              },
              "max_launch_delay_seconds": {
                  "description": "The maximum amount of time (in seconds) to wait, after applying the backoffSeconds and backoffFactor values, before attempting to restart failed tasks.",
                  "type": "number",
                  "default": 3600
              }
            },
            "required": [
                  "name",
                  "cpus",
                  "mem",
                  "instances"
            ]
      },
        "placement": {
            "type": "object",
            "description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
            "properties": {
                "constraints": {
                    "type": "string",
                    "description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
                    "default": "[[\"hostname\",\"UNIQUE\"]]",
                    "media": {
                        "type": "application/x-zone-constraints+json"
                    }
                },
                "region": {
                    "type": "string",
                    "description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
                    "default": "",
                    "media": {
                        "type": "application/x-region+string"
                    }
                }
            }
        },
        "networking": {
            "type": "object",
            "description": "Configure the networking for your service.",
            "properties": {
                "service_endpoints": {
                    "type": "object",
                    "description": "DC/OS can automatically generate a Service Address to connect to each of your load balanced endpoints.",
                    "properties": {
                        "container_port": {
                            "description": "Container port number",
                            "type": "number",
                            "default": 8080
                        },
                        "name": {
                          "description": "Name your endpoint to search for it by a meaningful name, rather than the port number.",
                          "type": "string",
                          "default": ""
                        },
                        "host_port": {
                            "description": "Host port number",
                            "type": "number",
                            "default": 0
                        },
                        "protocol": {
                            "type": "string",
                            "description": "Protocol can be UDP, TCP or both. i.e. : \"udp\", \"tcp\", \"udp, tcp\". Most services will use TCP",
                            "default": "tcp"
                        },
                        "load_balance_port": {
                            "type": "number",
                            "description": "This port will be used to load balance this service address internally"
                        }
                    }
                },
                "marathon_lb_proxy": {
                    "type": "object",
                    "properties": {
                        "enabled": {
                            "type": "boolean",
                            "default": true
                        },
                        "vhost": {
                            "type": "string"
                        },
                        "path": {
                            "type": "string",
                            "default": "/keycloak"
                        }
                    }
                }
            }
        },
        "health_checks": {
            "type": "object",
            "description": "Health checks may be specified per application to be run against the application's instances.",
            "properties": {
              "IP_protocol": {
                "type": "object",
                "properties": {
                  "protocol": {
                    "type": "string",
                    "description": "Specifies the protocol of the requests: HTTP, HTTPS, TCP.",
                    "default": "MESOS_HTTP",
                    "enum": [
                      "MESOS_HTTP",
                      "MESOS_HTTPS",
                      "MESOS_TCP",
                      "HTTP",
                      "HTTPS"
                    ]
                  },
                  "path": {
                    "type": "string",
                    "description": "If \"protocol\": \"HTTP\" or its derivatives, this option specifies the path to the task health status endpoint. For example, \"/path/to/health\".",
                    "default": "/"
                  }
                }
              }
            }
          },
        "environment": {
            "type": "object",
            "description": "Additional configuration options for environment variables.",
            "properties": {
                "KEYCLOAK_HOSTNAME": {
                    "description": "Hostname of the service",
                    "type": "string",
                    "default": ""
                },
                "KEYCLOAK_USER_SECRET": {
                    "description": "Name of the DC/OS Secret storing the username of the repository",
                    "type": "string",
                    "default": "keycload-user"
                },
                "KEYCLOAK_PASSWORD_SECRET": {
                    "description": "Name of the DC/OS Secret storing the password (or API token) of the repository",
                    "type": "string",
                    "default": "keycload-password"
                },
                "DB_VENDOR": {
                    "description": "Database Vendor",
                    "type": "string",
                    "default": "mysql"
                },
                "DB_ADDR": {
                    "description": "Database Address",
                    "type": "string",
                    "default": "keycloak-mysql.marathon.l4lb.thisdcos.directory"
                },
                "DB_PORT": {
                    "description": "Database Port",
                    "type": "string",
                    "default": "3306"
                },
                "DB_NAME": {
                    "description": "Database Name",
                    "type": "string",
                    "default": "keycloak"
                },
                "DB_USER_SECRET": {
                    "description": "Name of the DC/OS Secret storing the username of the repository",
                    "type": "string",
                    "default": "keycload-db-user"
                },
                "DB_PASSWORD_SECRET": {
                    "description": "Name of the DC/OS Secret storing the password (or API token) of the repository",
                    "type": "string",
                    "default": "keycload-db-password"
                }
            }
        }
    }
}
