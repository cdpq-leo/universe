{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS partners-quotes-viewer service specifications",
      "properties": {
        "name": {
          "default": "partners-quotes-viewer",
          "type": "string",
          "description": "Name of partners-quotes-viewer instance as seen in DCOS."
        },
        "cpus": {
          "description": "Number of logical cores to allocate to each service instance.",
          "type": "number",
          "default": 0.2
        },
        "mem": {
          "description": "Memory in Mb to allocate to each service instance.",
          "type": "number",
          "default": 256
        }
      }
    },
    "placement": {
      "type": "object",
      "description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
      "properties": {
        "constraints": {
          "type": "string",
          "description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
          "default": "[]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "region": {
          "type": "string",
          "description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
          "default": "",
          "media": {
            "type": "application/x-region+string"
          }
        }
      }
    },
    "networking": {
      "type": "object",
      "description": "Configure the networking for your service.",
      "properties": {
        "container_port": {
          "description": "Container port",
          "type": "number",
          "default": 8080
        }
      }
    },
    "health_checks": {
      "type": "object",
      "description": "Health checks may be specified per application to be run against the application's instances.",
      "properties": {
        "health_url": {
          "description": "Url for health checks",
          "type": "string",
          "default": "/en"
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "Environment variables",
      "properties": {
        "HTTP_HOSTNAME": {
          "description": "Hostname",
          "type": "string",
          "default": "0.0.0.0"
        },
        "HTTP_PORT": {
          "description": "HTTP_PORT",
          "type": "string",
          "default": "80"
        },
        "ENDPOINT": {
          "description": "API endpoint",
          "type": "string",
          "default": "http://ui-rdf-service.marathon.l4lb.thisdcos.directory:5000/service/ui-rdf-service"
        },
        "ELASTIC_ENDPOINT": {
          "description": "Elastic endpoint",
          "type": "string",
          "default": "http://master.elastic.l4lb.thisdcos.directory:9200"
        }
      }
    },
    "fetch": {
      "type": "object",
      "description": "If your service requires additional files and/or archives of files, enter their URIs to download and, if necessary, extract these resources.",
      "properties": {
        "artifact_URI": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string"
            },
            "extract": {
              "type": "boolean",
              "default": true
            },
            "executable": {
              "type": "boolean",
              "default": false
            },
            "cache": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    }
  }
}