{
  "id": "/{{service.name}}",
  "backoffFactor": {{service.back_off_factor}},
  "backoffSeconds": {{service.back_off_seconds}},
  "mem": {{service.mem}},
  "cpus": {{service.cpus}},
  "disk": {{service.disk}},
  "instances": {{service.instances}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "container": {
    "type": "DOCKER",
    "docker": {
      "forcePullImage": true,
      "image": "{{resource.assets.container.docker.image}}",
      "parameters": [],
      "privileged": false
    },
    "volumes": 
      [
         {{^volumes.volume_data.external_volume_name}}
        {
          "containerPath": "data",
          "mode": "RW",
          "persistent": {
            "size": {{volumes.volume_data.size}},
            "type": "{{volumes.volume_data.type}}",
            "profileName": "{{volumes.volume_data.profile}}",
            "constraints": []
          }
        },
        {
           "containerPath": "{{volumes.volume_data.container_path}}/data",
           "hostPath": "data",
           "mode": "RW"
        }
        {{/volumes.volume_data.external_volume_name}}
        {{#volumes.volume_data.external_volume_name}}
        {
          "containerPath": "{{volumes.volume_data.container_path}}/data",
          "external": {
            "name": "{{volumes.volume_data.external_volume_name}}",
            "provider": "dvdi",
            "options": { "dvdi/driver": "rexray" }
          },
          "mode": "RW"
        }     
        {{/volumes.volume_data.external_volume_name}}
    ],
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}   
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        }, 
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        "protocol": "{{networking.service_endpoints.protocol}}"
      }
    ]
  },
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "KAFKA_PRODUCER_TOPIC_RESET": "{{environment.KAFKA_PRODUCER_TOPIC_RESET}}",
    "MARKLOGIC_PWD": {
      "secret": "marklogicpassword"
    },
    "KAFKA_PRODUCER_TOPIC_SUBMIT": "{{environment.KAFKA_PRODUCER_TOPIC_SUBMIT}}",
    "MARKLOGIC_COL": "{{environment.MARKLOGIC_COL}}",
    "MARKLOGIC_URL": "{{environment.MARKLOGIC_URL}}"
    "MARKLOGIC_USR": {
      "secret": "marklogicuser"
    },
    "KAFKA_BOOTSTRAP_SERVERS": "{{environment.KAFKA_BOOTSTRAP_SERVERS}}",
    "MARKLOGIC_DB": "{{environment.MARKLOGIC_DB}}"
  },
  "secrets": {
    "marklogicuser": {
      "source": "{{environment.MARKLOGIC_USR}}"
    },
    "marklogicpassword": {
      "source": "{{environment.MARKLOGIC_PWD}}"
    }
  },
  "executor": "",
  "healthChecks": [
    {
      "gracePeriodSeconds": {{health_checks.MESOS_HTTP.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.MESOS_HTTP.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.MESOS_HTTP.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.MESOS_HTTP.advanced_health_checking_settings.max_failures}},
      "delay_seconds": {{health_checks.MESOS_HTTP.advanced_health_checking_settings.delay_seconds}},
      "path": "{{health_checks.MESOS_HTTP.path}}",
      "portIndex": {{health_checks.MESOS_HTTP.port_index}},
      "protocol": "MESOS_HTTP",
      "ipProtocol": "IPv4"
    }
  ],
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_PORT_INDEX": "0",
    "DCOS_SERVICE_NAME": "{{service.name}}"
  },
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "requirePorts": false,
  "upgradeStrategy": {
    "maximumOverCapacity": 1,
    "minimumHealthCapacity": 1
  },
  "version": "2019-05-23T11:08:02.361Z",
  "versionInfo": {
    "lastScalingAt": "2019-05-23T11:08:02.361Z",
    "lastConfigChangeAt": "2019-05-23T11:08:02.361Z"
  },
  "killSelection": "YOUNGEST_FIRST",
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0,
    "expungeAfterSeconds": 0
  },
  "fetch": 
  [
    {
      "uri": "{{fetch.artifact_URI.uri}}",
      "extract": {{fetch.artifact_URI.extract}},
      "executable": {{fetch.artifact_URI.executable}},
      "cache": {{fetch.artifact_URI.cache}}
    }
  ]
}