{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "forcePullImage": true,
      "image": "{{resource.assets.container.docker.image}}",
      "privileged": false,
      "parameters": []
    },
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        },
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        {{#networking.service_endpoints.name}}
        "name": "{{networking.service_endpoints.name}}",
        {{/networking.service_endpoints.name}}
        "protocol": "{{networking.service_endpoints.protocol}}"
      }
    ],
    "volumes":
    [
      {{^volumes.volume_data.external_volume_name}}
      {
        "containerPath": "data",
        "mode": "RW",
        "persistent": {
          "size": {{service.disk}},
          "type": "{{volumes.volume_data.type}}",
          {{#volumes.volume_data.profile}}
          "profileName": "{{volumes.volume_data.profile}}",
          {{/volumes.volume_data.profile}}
          "constraints": []
        }
      },
      {
         "containerPath": "{{volumes.volume_data.container_path}}/data",
         "hostPath": "data",
         "mode": "RW"
      }
      {{/volumes.volume_data.external_volume_name}}
      {{#volumes.volume_data.external_volume_name}}
      {
        "containerPath": "{{volumes.volume_data.container_path}}/data",
        "external": {
          "name": "{{volumes.volume_data.external_volume_name}}",
          "provider": "dvdi",
          "options": { "dvdi/driver": "rexray" }
        },
        "mode": "RW"
      }
      {{/volumes.volume_data.external_volume_name}}
    ]
  },
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "KAFKA_PRODUCER_TOPIC_RESET": "{{environment.KAFKA_PRODUCER_TOPIC_RESET}}",
    "KAFKA_PRODUCER_TOPIC_SUBMIT": "{{environment.KAFKA_PRODUCER_TOPIC_SUBMIT}}",
    "MARKLOGIC_COL": "{{environment.MARKLOGIC_COL}}",
    "MARKLOGIC_URL": "{{environment.MARKLOGIC_URL}}",
    "KAFKA_BOOTSTRAP_SERVERS": "{{environment.KAFKA_BOOTSTRAP_SERVERS}}",
    "MARKLOGIC_DB": "{{environment.MARKLOGIC_DB}}",
    "MARKLOGIC_USR": {"secret": "marklogicuser"},
    "MARKLOGIC_PWD": {"secret": "marklogicpassword"}
  },
  "secrets": {
    "marklogicuser": {
      "source": "{{environment.MARKLOGIC_USER_SECRET}}"
    },
    "marklogicpassword": {
      "source": "{{environment.MARKLOGIC_PASSWORD_SECRET}}"
    }
  },
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
   "HAPROXY_0_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "healthChecks": [
    {
      "protocol": "HTTP",
      "portIndex": {{health_checks.HTTP_protocol.port_index}},
      {{#networking.marathon_lb_proxy.enabled}}
      {{#networking.marathon_lb_proxy.path}}
      "path": "{{networking.marathon_lb_proxy.path}}/",
      {{/networking.marathon_lb_proxy.path}}
      {{/networking.marathon_lb_proxy.enabled}}
      {{^networking.marathon_lb_proxy.enabled}}
      "path": "/",
      {{/networking.marathon_lb_proxy.enabled}}
      "gracePeriodSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.HTTP_protocol.advanced_health_checking_settings.max_failures}},
      "delaySeconds": {{health_checks.HTTP_protocol.advanced_health_checking_settings.delay_seconds}}
    }
  ],
  "fetch": [
  {{#fetch.artifact_URI.uri}}
  {
    "uri": "{{fetch.artifact_URI.uri}}",
    "extract": {{fetch.artifact_URI.extract}},
    "executable": {{fetch.artifact_URI.executable}},
    "cache": {{fetch.artifact_URI.cache}}
  }
  {{/fetch.artifact_URI.uri}}
  ],
  "upgradeStrategy": {
    "maximumOverCapacity": 0,
    "minimumHealthCapacity": 0.5
  }
}
