{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS translate-svc service specifications",
      "properties": {
        "name": {
          "description": "Name of translate-svc instances as seen in DC/OS.",
          "type": "string",
          "default": "translate-svc"
        },
        "cpus": {
          "description": "Number of logical cores to allocate to each service instance.",
          "type": "number",
          "default": 0.2
        },
        "mem": {
          "description": "Memory in Mb to allocate to each service instance.",
          "type": "number",
          "default": 256
        }
      }
    },
    "placement": {
      "type": "object",
      "description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
      "properties": {
        "constraints": {
          "type": "string",
          "description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
          "default": "[]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "region": {
          "type": "string",
          "description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
          "default": "",
          "media": {
            "type": "application/x-region+string"
          }
        }
      }
    },
    "networking": {
      "type": "object",
      "description": "Configure the networking for your service.",
      "properties": {
        "service_endpoints": {
          "type": "object",
          "description": "DC/OS can automatically generate a Service Address to connect to each of your load balanced endpoints.",
          "properties": {
            "container_port": {
              "description": "Container port number",
              "type": "number",
              "default": 8080
            },
            "host_port": {
              "description": "Host port number",
              "type": "number",
              "default": 0
            },
            "protocol": {
              "type": "string",
              "description": "Protocole can be UDP, TCP or both. i.e. : \"udp\", \"tcp\", \"udp, tcp\". Most services will use TCP",
              "default": "tcp"
            },
            "load_balance_port": {
              "type": "number",
              "description": "This port will be used to load balance this service address internally",
              "default": 8080
            }
          }
        }
      }
    },
    "volumes": {
      "description": "Create a stateful service by configuring a persistent volume. Persistent volumes enable instances to be restarted without data loss.",
      "type": "object",
      "properties": {
        "volume": {
          "type": "object",
          "description": "A volume for your data. By default, the volume type is host. If you enter a host path in the local_persistant_volume section, the volume type will be local persistant",
          "properties": {
            "local_persistant_volume": {
              "type": "object",
              "description": "A locally persistent volume based upon the physical disks installed in the agent which has the capabilities of a single disk.",
              "properties": {
                "container_path": {
                  "type": "string",
                  "description": "The path where your application will read and write data. This must be a single-level path relative to the container ; it cannot contain a forward slash."
                },
                "size_MiB": {
                  "type": "number",
                  "description": "The size of the persistent volume in MiBs."
                },
                "type": {
                  "type": "string",
                  "description": "The type of mesos disk resource to use; the valid options are root, path, and mount, corresponding to the valid mesos multi-disk resource types."
                },
                "constraints": {
                  "type": "array",
                  "description": "Constraints restricting where new persistent volumes should be created. Currently, it is only possible to constrain the path of the disk resource by regular expression.",
                  "items": {
                    "type": "string"
                  },
                  "default": []
                },
                "profileName": {
                  "type": "string",
                  "description": "The storage volume profile. Only volumes with the specified profile are used to launch an application. It this option is not given, any volume (with or without a profile) will be used for launching."
                }
              }
            },
            "host_volume": {
              "type": "object",
              "description": "A host volume is a directory on the local agent mapped to one in a container.",
              "properties": {
                "host_path": {
                  "type": "string",
                  "description": "Path on the host filesystem to the location of the data you mounted",
                  "default": "/var/opt/data/google"
                },
                "container_path": {
                  "type": "string",
                  "description": "Path, in the container, where you wish to have the data mounted",
                  "default": "/google-data"
                }
              }
            }
          }
        }
      }
    },
    "health_checks": {
      "type": "object",
      "description": "Health checks may be specified per application to be run against the application's instances.",
      "properties": {
        "health_url": {
          "description": "Url for health checks",
          "type": "string",
          "default": "/service/translate-svc/api/health"
        },
        "advanced_health_checking_settings": {
          "type": "object",
          "properties": {
            "delay_seconds": {
              "type": "number",
              "description": "Time to wait until starting health check (default: 2).",
              "default": 2
            },
            "grace_periods": {
              "type": "number",
              "description": "Health check failures are ignored within this number of seconds or until the instance becomes healthy for the first time.",
              "default": 300
            },
            "intervals": {
              "type": "number",
              "description": "Number of seconds to wait between health checks.",
              "default": 60
            },
            "max_failures": {
              "type": "number",
              "description": "Number of consecutive health check failures after which the unhealthy instance should be killed. HTTP & TCP health checks: If this value is 0, instances will not be killed if they fail the health check.",
              "default": 3
            },
            "timeout": {
              "type": "number",
              "description": "Number of seconds after which a health check is considered a failure regardless of the response.",
              "default": 20
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "environment variables",
      "properties": {
        "HTTP_HOSTNAME": {
          "description": "Hostname",
          "type": "string",
          "default": "0.0.0.0"
        },
        "HTTP_PORT": {
          "description": "HTTP_PORT",
          "type": "string",
          "default": "8080"
        },
        "SERVICE_PREFIX": {
          "description": "service prefix url",
          "type": "string",
          "default": "/service/translate-svc"
        },
        "GOOGLE_APPLICATION_CREDENTIALS": {
          "description": "Google service account credentials file location.",
          "type": "string",
          "default": "/var/opt/data/google/loyal-rookery-222020-6a69b33e81bf.json"
        }
      }
    },
    "fetch": {
      "type": "object",
      "description": "If your service requires additional files and/or archives of files, enter their URIs to download and, if necessary, extract these resources.",
      "properties": {
        "artifact_URI": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "default": "file:///opt/mesosphere/etc/mesos-scheduler-modules/docker.tar.gz"
            },
            "extract": {
              "type": "boolean",
              "default": true
            },
            "executable": {
              "type": "boolean",
              "default": false
            },
            "cache": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    }
  }
}