{
 "id": "{{service.name}}",
 "instances": 1,
 "cpus": {{service.cpus}},
 "mem": {{service.mem}},
 "disk": {{service.disk}},
  {{#service.cmd}}
   "cmd": "{{service.cmd}}",
  {{/service.cmd}}
 "fetch": [
    {{#fetch.artifact_URI.uri}}
    {
      "uri": "{{fetch.artifact_URI.uri}}",
      "extract": {{fetch.artifact_URI.extract}},
      "executable": {{fetch.artifact_URI.executable}},
      "cache": {{fetch.artifact_URI.cache}}
    }
    {{/fetch.artifact_URI.uri}}
   ],
 "container": {
   "type": "DOCKER",
   "docker": {
      "image": "{{resource.assets.container.docker.image}}",
      "network": "HOST",
      "forcePullImage": true
   },
   "volumes": [
     {
        "containerPath": "{{volumes.persistent_volume.container_path}}",
        "external": {
          "name": "{{volumes.persistent_volume.name}}",
          "provider": "dvdi",
          "options": { "dvdi/driver": "rexray" }
        },
        "mode": "RW"
      }
    ]
 },
 "healthChecks": [
   {
   "protocol": "TCP",
   "gracePeriodSeconds": 60,
   "intervalSeconds": 5,
   "portIndex": 0,
   "timeoutSeconds": 5,
   "maxConsecutiveFailures": 3
   }
 ],
  "env": {
    "PASSWORD": {"secret": "redis_password"},
    "IS_MASTER": "{{environment.IS_MASTER}}",
    "ANNOUNCE_IP": "{{environment.ANNOUNCE_IP}}",
    {{#environment.MASTER_HOST}}
    "MASTER_HOST": "{{environment.MASTER_HOST}}",
    {{/environment.MASTER_HOST}}
    {{#environment.MASTER_PORT}}
    "MASTER_PORT": "{{environment.MASTER_PORT}}",
    {{/environment.MASTER_PORT}}
    "ANNOUNCE_PORT": "{{networking.service_endpoints.load_balance_port}}"
  },
  "secrets": {
    "redis_password": {
      "source": "{{environment.PASSWORD}}"
    }
  },
  "portDefinitions": [
    {
      "port": 0,
       "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        },
      {{#networking.service_endpoints.name}}
      "name": "{{networking.service_endpoints.name}}",
      {{/networking.service_endpoints.name}}
      "protocol": "tcp"
    }
  ],
  "upgradeStrategy": {
    "minimumHealthCapacity": 0,
    "maximumOverCapacity": 0
  }
}
