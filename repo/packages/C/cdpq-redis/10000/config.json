{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "Name of this service instance.",
          "type": "string",
          "default": "redis"
        },
        "cpus": {
          "description": "CPU shares to allocate to the Redis instance.",
          "type": "number",
          "default": 1.0,
          "minimum": 1.0
        },
        "mem": {
          "description": "Memory to allocate to the Redis instance.",
          "type": "number",
          "default": 1024,
          "minimum": 1024
        },
        "disk": {
          "description": "Disk (MB) to allocate to the Redis instance.",
          "type": "number",
          "default": 65536,
          "minimum": 2000
        }
      }
    },
    "placement": {
      "type": "object",
      "description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
      "properties": {
        "constraints": {
          "type": "string",
          "description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
          "default": "[]",
          "media": {
            "type": "application/x-zone-constraints+json"
          }
        },
        "region": {
          "type": "string",
          "description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
          "default": "",
          "media": {
            "type": "application/x-region+string"
          }
        }
      }
    },
    "volumes": {
      "description": "Storage properties for the your service on DC/OS.",
      "type": "object",
      "properties": {
        "persist": {
          "description": "Whether to use volumes to persist youir service data. If false, all your service data and state is ephemeral and will not be shared between service instances. By default, this is false.",
          "type": "boolean",
          "default": false
        },
        "local_volume": {
          "description": "Local volumes configuration (only used if external persistent volumes are disabled). Please read Pre-Install Notes for setup for local volumes.",
          "type": "object",
          "properties": {
            "host_path": {
              "description": "The location of a volume on the host to be used for persisting your service configuration and data.",
              "type": "string",
              "default": "/mnt/azurefileshare/data/redis"
            },
            "container_path": {
              "description": "The location of a volume on the host to be used for persisting your service configuration and data.",
              "type": "string",
              "default": "/redis-data"
            }
          }
        },
        "external_volume": {
          "description": "External volumes configuration. Uses the REX-Ray volume driver.",
          "type": "object",
          "properties": {
            "enable": {
              "description": "Whether to use DC/OS external volumes to persist your service data. By default, this is false.",
              "type": "boolean",
              "default": false
            },
            "container_path": {
              "type": "string",
              "description": "The path where the volume is mounted inside the container. For Mesos external volumes, this must be a single-level path relative to the container; it cannot contain a forward slash (/).",
              "default": ""
            },
            "external": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name that your volume driver uses to look up your volume. When your task is staged on an agent, the volume driver queries the storage service for a volume with this name. If one does not exist, it is created implicitly. Otherwise, the existing volume is reused.",
                  "default": ""
                },
                "provider": {
                  "type": "string",
                  "description": "Your storage provider",
                  "default": "dvdi"
                },
                "options": {
                  "type": "object",
                  "description": " Which Docker volume driver to use for storage. The only Docker volume driver provided with DC/OS is rexray",
                  "properties": {
                    "dvdi_driver": {
                      "type": "string",
                      "default": "rexray"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}