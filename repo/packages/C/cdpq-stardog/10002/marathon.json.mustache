{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "forcePullImage": true,
      "image": "{{resource.assets.container.docker.image}}",
      "parameters": [],
      "privileged": false
    },
    "volumes": [
    {{^volumes.volume_data.external_volume_name}}
  	{
  	  "containerPath": "data",
  	  "mode": "RW",
  	  "persistent": {
  		"type": "{{volumes.volume_data.type}}",
      {{#volumes.volume_data.profile}}
  		"profileName": "{{volumes.volume_data.profile}}",
      {{/volumes.volume_data.profile}}
  		"size": {{service.disk}},
  		"constraints": []
  	  }
  	},
  	{
  	  "containerPath": "{{volumes.volume_data.container_path}}/data",
  	  "hostPath": "data",
  	  "mode": "RW"
  	}
  	{{/volumes.volume_data.external_volume_name}}
  	{{#volumes.volume_data.external_volume_name}}
      {
          "containerPath": "{{volumes.volume_data.container_path}}/data",
          "external": {
            "name": "{{volumes.volume_data.external_volume_name}}",
            "provider": "dvdi",
            "options": { "dvdi/driver": "rexray" }
          },
          "mode": "RW"
      }
  	{{/volumes.volume_data.external_volume_name}}
    ],
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        },
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        {{#networking.service_endpoints.name}}
        "name": "{{networking.service_endpoints.name}}",
        {{/networking.service_endpoints.name}}
        "protocol": "{{networking.service_endpoints.protocol}}"
      }
    ]
  },
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "DEPLOYMENT_TYPE": "{{environment.DEPLOYMENT_TYPE}}",
    "DEPLOYMENT_NODE_TYPE": "{{environment.DEPLOYMENT_NODE_TYPE}}",
    "STARDOG_SERVER_JAVA_ARGS": "{{environment.STARDOG_SERVER_JAVA_ARGS}}",
    "MEMORY_MODE": "{{environment.MEMORY_MODE}}",
    "ADMIN_PASSWORD": {"secret": "stardogadminpassword"}
  },
  "secrets": {
    "stardogadminpassword": {
      "source": "{{environment.ADMIN_PASSWORD_SECRET}}"
    }
  },
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "healthChecks": [
    {
      "gracePeriodSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.TCP_protocol.advanced_health_checking_settings.max_failures}},
      "portIndex": {{health_checks.TCP_protocol.port_index}},
      "protocol": "TCP"
    }
  ],
  "fetch": [
    {{#fetch.artifact_URI.uri}}
    {
      "uri": "{{fetch.artifact_URI.uri}}",
      "extract": {{fetch.artifact_URI.extract}},
      "executable": {{fetch.artifact_URI.executable}},
      "cache": {{fetch.artifact_URI.cache}}
    }
    {{/fetch.artifact_URI.uri}}
   ],
   "requirePorts": false,
   "upgradeStrategy": {
     "minimumHealthCapacity": 0.5,
     "maximumOverCapacity": 0
   },
   "killSelection": "YOUNGEST_FIRST"
}
