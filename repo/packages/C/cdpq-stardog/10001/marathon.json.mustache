{
  "id": "{{service.name}}",
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  "instances": {{service.instances}},
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "forcePullImage": true,
      "image": "{{resource.assets.container.docker.image}}",
      "parameters": [],
      "privileged": false
    },
    "volumes": [
      {
        "containerPath": "{{volumes.local_backup_volume.container_path}}",
        "hostPath": "{{volumes.local_backup_volume.host_path}}",
        "mode": "RW"
      },
      {
        "containerPath": "{{volumes.local_data_volume.container_path}}",
        "hostPath": "{{volumes.local_data_volume.host_path}}",
        "mode": "RW"
      }
    ],
    "portMappings": [
      {
        "containerPort": {{networking.container_port}},
        "hostPort": 0,
        "labels": {
          "VIP_0": "{{networking.VIP_0}}:{{networking.container_port}}"
        },
        "name": "{{service.name}}",
        "protocol": "tcp"
      }
    ]
  },
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "DEPLOYMENT_TYPE": "{{environment.DEPLOYMENT_TYPE}}",
    "DEPLOYMENT_NODE_TYPE": "{{environment.DEPLOYMENT_NODE_TYPE}}"
  },
  "labels": {
    {{#networking.external_access.enabled}}
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_VHOST": "{{networking.external_access.external_public_agent_hostname}}",
    {{/networking.external_access.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "data-services/{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "portDefinitions": [],
  "fetch": 
   [
    {
      "uri": "{{fetch.artifact_URI.uri}}",
      "extract": {{fetch.artifact_URI.extract}},
      "executable": {{fetch.artifact_URI.executable}},
      "cache": {{fetch.artifact_URI.cache}}
    }
   ]
}
