{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS coreapi-search service specifications",
      "properties": {
        "name": {
          "description": "Name of CoreApiSearch instances as seen in DC/OS.",
          "type": "string",
          "default": "ui-coreapi-search"
        },
        "cpus": {
          "description": "Number of logical cores to allocate to each service instance.",
          "type": "number",
          "default": 0.2
        },
        "mem": {
          "description": "Memory in Mb to allocate to each service instance.",
          "type": "number",
          "default": 256
        },
        "artifact_URI": {
          "type": "object",
          "description": "If your service requires additional files and/or archives of files, enter their URIs to download and, if necessary, extract these resources.",
          "properties": {
            "uri": {
              "type": "string",
              "default": "file:///opt/mesosphere/etc/mesos-scheduler-modules/docker.tar.gz"
            }
          }
        }
      }
    },
    "networking": {
      "type": "object",
      "description": "Configure the networking for your service.",
      "properties": {
        "container_port": {
          "description": "Container port number",
          "type": "number",
          "default": 8080
        }
      }
    },
    "volumes": {
      "description": "Create a stateful service by configuring a persistent volume. Persistent volumes enable instances to be restarted without data loss.",
      "type": "object",
      "properties": {
        "data_host_volume": {
          "type": "object",
          "description": "A host volume is a directory on the local agent mapped to one in a container.",
          "properties": {
            "host_path": {
              "type": "string",
              "description": "Host path",
              "default": "/mnt/azurefileshare/data/google"
            },
            "container_path": {
              "type": "string",
              "description": "Container path",
              "default": "/var/opt/data/google"
            },
            "mode": {
              "type": "string",
              "default": "RW",
              "enum": [
                "RW",
                "RO"
              ]
            }
          }
        }
      }
    },
    "health_checks": {
      "type": "object",
      "description": "Health checks may be specified per application to be run against the application's instances.",
      "properties": {
        "HTTP_protocol": {
          "type": "object",
          "properties": {
            "port_index": {
              "type": "number",
              "default": 0
            },
            "path": {
              "type": "string",
              "description": "Enter a path that is reachable in your service and where you expect a response code between 200 and 399.",
              "default": "/service/ui-coreapi-search/api/health"
            },
            "advanced_health_checking_settings": {
              "type": "object",
              "properties": {
                "grace_periods": {
                  "type": "number",
                  "description": "Health check failures are ignored within this number of seconds or until the instance becomes healthy for the first time.",
                  "default": 120
                },
                "intervals": {
                  "type": "number",
                  "description": "Number of seconds to wait between health checks.",
                  "default": 30
                },
                "timeout": {
                  "type": "number",
                  "description": "Number of seconds after which a health check is considered a failure regardless of the response.",
                  "default": 3
                },
                "max_failures": {
                  "type": "number",
                  "description": "Number of consecutive health check failures after which the unhealthy instance should be killed. HTTP & TCP health checks: If this value is 0, instances will not be killed if they fail the health check.",
                  "default": 5
                }
              }
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "environment variables",
      "properties": {
        "HTTP_HOSTNAME": {
          "description": "Hostname",
          "type": "string",
          "default": "0.0.0.0"
        },
        "HTTP_PORT": {
          "description": "HTTP_PORT",
          "type": "string",
          "default": "8080"
        },
        "SERVICE_PREFIX": {
          "description": "service prefix url",
          "type": "string",
          "default": "/service/ui-coreapi-search"
        },
        "CUSTOM_SEARCH_ID": {
          "description": "custom search id",
          "type": "string",
          "default": ""
        },
        "SEARCH_LIMIT": {
          "description": "max search results per query (1-10)",
          "type": "string",
          "default": "10"
        },
        "SEARCH_LANGUAGE": {
          "description": "search language",
          "type": "string",
          "default": "lang_en"
        },
        "SEARCH_QUERY_KEYWORDS": {
          "description": "search keyword to get more precise results",
          "type": "string",
          "default": ""
        },
        "USE_SEARCH_DATE_PARAM": {
          "description": "search date range",
          "type": "string",
          "default": "true"
        },
        "GOOGLE_APPLICATION_CREDENTIALS": {
          "description": "Google service account credentials file location.",
          "type": "string",
          "default": "/var/opt/data/google/loyal-rookery-222020-6a69b33e81bf.json"
        },
        "SCOPES": {
          "description": "Google auth scopes",
          "type": "string",
          "default": "https://www.googleapis.com/auth/cse"
        }
      }
    }
  }
}
