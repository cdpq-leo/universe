{
  "id": "{{service.name}}",
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  "cmd": "pypi-server -P /data/.htpasswd -a update,download,list /data/packages",
  "labels": {
    "HAPROXY_0_GROUP": "external",
    "HAPROXY_0_VHOST": "{{networking.vhost}}",
    "HAPROXY_0_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    "HAPROXY_0_STICKY": "true"
  },
  "container": {
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}   
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        }, 
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        "protocol": "{{networking.service_endpoints.protocol}}"  
      }
    ],
    "type": "DOCKER",
    "volumes": [
      {{#volumes.local_persistant_volume.container_path}}
      {
         "persistent": {
            "type": {{volumes.local_persistant_volume.type}},
            "size": {{volumes.local_persistant_volume.size_MiB}},
            "constraints": {{volumes.local_persistant_volume.constraints}},
            "profileName": {{volumes.local_persistant_volume.profileName}}
         },
         "mode": "RW",
         "containerPath": "{{volumes.local_persistant_volume.container_path}}",
      }
      {{/volumes.local_persistant_volume.container_path}}
      {{^volumes.local_persistant_volume.container_path}}
      {
        "containerPath": "{{volumes.host_volume.container_path}}",
        "hostPath": "{{volumes.host_volume.host_path}}",
        "mode": "RW"
      }
      {{/volumes.local_persistant_volume.container_path}}
    ],
    "docker": {
      "image": "{{resource.assets.container.docker.image}}",
      "forcePullImage": true
    }
  },
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "healthChecks": [
    {
      "portIndex": 0,
      "protocol": "MESOS_HTTP",
      "path": "/"
    }
  ],
  "env": {
      {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}"
      {{/placement.region}}
  }
}
