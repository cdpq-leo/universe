{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
    "forcePullImage": false,
    "image": "{{resource.assets.container.docker.image}}",
    "parameters": [],
    "privileged": false
    },
    "portMappings": [
      {
        {{#networking.service_endpoints.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
        },
        {{/networking.service_endpoints.load_balance_port}}
        "containerPort": {{networking.service_endpoints.container_port}},
        "hostPort": {{networking.service_endpoints.host_port}},
        {{#networking.service_endpoints.name}}
        "name": "{{networking.service_endpoints.name}}",
        {{/networking.service_endpoints.name}}
        "protocol": "{{networking.service_endpoints.protocol}}"
      }
    ],
    "volumes": [
    	{{^volumes.volume_data.external_volume_name}}
    	{
    	  "containerPath": "mssql",
    	  "mode": "RW",
    	  "persistent": {
    		"type": "{{volumes.volume_data.type}}",
        {{^volumes.volume_data.profile}}
    		"profileName": "{{volumes.volume_data.profile}}",
        {{/volumes.volume_data.profile}}
    		"size": {{volumes.volume_data.size}},
    		"constraints": []
    	  }
    	}
    	{{/volumes.volume_data.external_volume_name}}
    	{{#volumes.volume_data.external_volume_name}}
        {
            "containerPath": "{{volumes.volume_data.container_path}}",
            "external": {
              "name": "{{volumes.volume_data.external_volume_name}}",
              "provider": "dvdi",
              "options": { "dvdi/driver": "rexray" }
            },
            "mode": "RW"
        }
    	{{/volumes.volume_data.external_volume_name}}
     ]
  },
  "env": {
    {{#placement.region}}
      "SERVICE_REGION": "{{placement.region}}",
    {{/placement.region}}
    "ACCEPT_EULA": "Y",
    "SA_PASSWORD": {"secret": "sapassword"},
    "MSSQL_PID": "{{environment.MSSQL_PID}}",
    "MSSQL_TCP_PORT": "{{networking.container_port}}",
    "MSSQL_LCID": "{{environment.MSSQL_LCID}}",
    "MSSQL_COLLATION": "{{environment.MSSQL_COLLATION}}",
    "MSSQL_AGENT_ENABLED": "{{environment.MSSQL_AGENT_ENABLED}}",
    "MSSQL_DUMP_DIR": "{{environment.MSSQL_DUMP_DIR}}",
    "MSSQL_DATA_DIR": "{{volumes.volume_data.container_path}}/data",
    "MSSQL_LOG_DIR": "{{volumes.volume_data.container_path}}/log",
    "MSSQL_BACKUP_DIR": "{{volumes.volume_data.container_path}}/backup",
    "MSSQL_TEMPDB_DIR": "{{volumes.volume_data.container_path}}/tempdb"
  },
  "secrets": {
    "sapassword": {
      "source": "{{environment.SA_PASSWORD_SECRET}}"
    }
  },
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
	  "HAPROXY_0_BACKEND_HEAD": "backend {backend}\n  balance {balance}\n  mode {mode}\n  timeout server 30m\n  timeout client 30m\n",
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "healthChecks": [{
    "protocol": "TCP",
    "portIndex": 0,
    "gracePeriodSeconds": 300,
    "intervalSeconds": 60,
    "timeoutSeconds": 20,
    "maxConsecutiveFailures": 3
  }],
  "fetch": [
    {{#fetch.artifact_URI.uri}}
    {
      "uri": "{{fetch.artifact_URI.uri}}",
      "extract": {{fetch.artifact_URI.extract}},
      "executable": {{fetch.artifact_URI.executable}},
      "cache": {{fetch.artifact_URI.cache}}
    }
    {{/fetch.artifact_URI.uri}}
   ],
  "upgradeStrategy": {
    "maximumOverCapacity": 0,
    "minimumHealthCapacity": 0.5
  }
}
