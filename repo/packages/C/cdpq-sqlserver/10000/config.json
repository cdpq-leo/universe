{
	"properties": {
		"service": {
			"type": "object",
			"description": "DC/OS service configuration properties",
			"properties": {
				"name": {
					"description": "Name of this service instance",
					"type": "string",
					"default": "sqlserver"
				},
				"cpus": {
					"description": "CPU shares to allocate to each service instance.",
					"type": "number",
					"default": 1,
					"minimum": 1
				},
				"mem": {
					"description": "Memory to allocate to each service instance.",
					"type": "number",
					"default": 4096.0,
					"minimum": 4096.0
				}
			},
			"required": [
				"cpus",
				"mem"
			]
		},
		"placement": {
			"type": "object",
			"description": "Constraints control where apps run to allow optimizing for either fault tolerance (by spreading a task out on multiple nodes) or locality (by running all of an applications tasks on the same node).",
			"properties": {
				"constraints": {
					"type": "string",
					"description": "Constraints have three parts: a field name, an operator, and an optional parameter. The field can be the hostname of the agent node or any attribute of the agent node. Example: [[\"rack_id\", \"LIKE\", \"rack-foo-.*\"], [\"rack_id\", \"MAX_PER\", \"2\"]]",
					"default": "[]",
					"media": {
						"type": "application/x-zone-constraints+json"
					}
				},
				"region": {
					"type": "string",
					"description": "All application nodes will run in this region. When no region is specified the nodes are constrained to the local region. ",
					"default": "",
					"media": {
						"type": "application/x-region+string"
					}
				}
			}
		},
		"volumes": {
			"type": "object",
			"description": "sqlserver storage configuration properties",
			"properties": {
				"host_volume": {
					"description": "If using non-persistent volumes (local volumes), this sets the location of a volume on the host to be used for the service. The final location will be derived from this value plus the name set in `name` (e.g. `/mnt/host_volume/service_name`). This can be a mounted NFS drive. Note that this path must be the same on all DC/OS agents. NOTE: if you don't change the default /tmp value, YOUR DATA WILL NOT BE SAVED IN ANY WAY.",
					"type": "string",
					"default": "/tmp"
				},
				"persistence": {
					"type": "object",
					"description": "Enable persistent storage.",
					"properties": {
						"enable": {
							"description": "Enable or disable persistent storage.",
							"type": "boolean",
							"default": false
						},
						"volume_size": {
							"description": "If a new volume is to be created, this controls its size in MBs.",
							"type": "number",
							"default": 1024
						},
						"external": {
							"type": "object",
							"description": "External persistent storage properties",
							"properties": {
								"enable": {
									"description": "Enable or disable external persistent storage. The `persistence` option must also be selected. Please note that for these to work, your DC/OS cluster MUST have been installed with the right options in `config.yaml`. Also, please note this requires a working  configuration file for the driver (e.g. `rexray.yaml`).",
									"type": "boolean",
									"default": false
								},
								"volume_name": {
									"description": "Name that your volume driver uses to look up your external volume. When your task is staged on an agent, the volume driver queries the storage service for a volume with this name. If one does not exist, it is created implicitly. Otherwise, the existing volume is reused.",
									"type": "string",
									"default": "sqlserver"
								},
								"provider": {
									"description": "Provider of the external persistent volume. The default value should be correct for most use cases.",
									"type": "string",
									"default": "dvdi"
								},
								"driver": {
									"description": "Volume driver to use for storage. The default value should be correct for most use cases.",
									"type": "string",
									"default": "rexray"
								}
							}
						}
					}
				}
			}
		},
		"networking": {
			"type": "object",
			"description": "sqlserver networking configuration properties",
			"properties": {
				"port": {
					"description": "Port number to be used for clear communication internally to the cluster. Currently unused and fixed to be 3306.",
					"type": "number",
					"default": 1433
				},
				"host_mode": {
					"description": "Enable or disable host networking mode. NOTE: this requires the default port to be available on the target host. This also forces to have a single instance per node.",
					"type": "boolean",
					"default": false
				},
				"external_access": {
					"type": "object",
					"description": "Enable access from outside the cluster through Marathon-LB.\nNOTE: this connection is unencrypted.",
					"properties": {
						"enable": {
							"description": "Enable or disable creating a VIP for external access through a public node running Marathon-LB.",
							"type": "boolean",
							"default": false
						},
						"external_access_port": {
							"description": "For external access, port number to be used for clear communication in the external Marathon-LB load balancer",
							"type": "number",
							"default": 11433
						}
					}
				}
			}
		},
		"environment": {
			"type": "object",
			"description": "List of environment variables.",
			"properties": {
				"SA_PASSWORD": {
					"description": "A_PASSWORD is the database system administrator (userid = 'sa') password used to connect to SQL Server once the container is running. Important note: This password needs to include at least 8 characters of at least three of these four categories: uppercase letters, lowercase letters, numbers and non-alphanumeric symbols.",
					"type": "string",
					"default": "YourStrong!Passw0rd"
				},
				"MSSQL_PID ": {
					"description": "MSSQL_PID is the Product ID (PID) or Edition that the container will run with.",
					"type": "string",
					"enum": [
						"Developer",
						"Express",
						"Standard",
						"Enterprise",
						"EnterpriseCore"
					],
					"default": "Developer"
				}
			}
		}
	}
}