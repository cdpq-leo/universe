{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "Name of this service instance.",
          "type": "string",
          "default": "grakn"
        },
        "cpus": {
          "description": "CPU shares to allocate to the Grakn instance.",
          "type": "number",
          "default": 1.0,
          "minimum": 1.0
        },
        "mem": {
          "description": "Memory to allocate to the Grakn instance.",
          "type": "number",
          "default": 1024,
          "minimum": 1024
        },
        "disk": {
          "description": "Disk (MB) to allocate to the Grakn instance.",
          "type": "number",
          "default": 65536,
          "minimum": 2000
        }
      }
    },
    "volumes": {
      "type": "object",
      "description": "Docker volume properties",
      "properties": {
        "enabled": {
          "description": "Enable host volume or not",
          "type": "boolean",
          "default": false
        },
        "host_path": {
          "description": "Host path",
          "type": "string",
          "default": ""
        },
        "container_path": {
          "description": "Container path",
          "type": "string",
          "default": ""
        },
        "mode": {
          "description": "Mode",
          "type": "string",
          "default": "RO",
          "enum": [
            "RW",
            "RO"
          ]
        }
      }
    },
    "health_checks": {
      "type": "object",
      "description": "Health checks may be specified per application to be run against the application's instances.",
      "properties": {
        "HTTP_protocol": {
          "type": "object",
          "properties": {
            "port": {
              "type": "number",
              "default": 0
            },
            "path": {
              "type": "string",
              "description": "Enter a path that is reachable in your service and where you expect a response code between 200 and 399.",
              "default": "/"
            },
            "advanced_health_checking_settings": {
              "type": "object",
              "properties": {
                "grace_periods": {
                  "type": "number",
                  "description": "Health check failures are ignored within this number of seconds or until the instance becomes healthy for the first time.",
                  "default": 120
                },
                "intervals": {
                  "type": "number",
                  "description": "Number of seconds to wait between health checks.",
                  "default": 30
                },
                "timeout": {
                  "type": "number",
                  "description": "Number of seconds after which a health check is considered a failure regardless of the response.",
                  "default": 5
                },
                "max_failures": {
                  "type": "number",
                  "description": "Number of consecutive health check failures after which the unhealthy instance should be killed. HTTP & TCP health checks: If this value is 0, instances will not be killed if they fail the health check.",
                  "default": 3
                }
              }
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "Grakn instance configuration properties",
      "properties": {
        "gremlin_graph_reader": {
          "description": "Graph reader",
          "type": "string",
          "default": "org.janusgraph.hadoop.formats.cassandra.CassandraInputFormat"
        },
        "start_local_storage": {
          "description": "Start local storage engine",
          "type": "boolean",
          "default": true
        },
        "storage_hostname": {
          "description": "Storage hostname",
          "type": "string",
          "default": "localhost"
        },
        "keyspace": {
          "description": "Grakn keyspace",
          "type": "string",
          "default": "grakn"
        },
        "start_local_queue": {
          "description": "Start local queue",
          "type": "boolean",
          "default": true
        },
        "queue_host": {
          "description": "Queue host",
          "type": "string",
          "default": "localhost:6379"
        },
        "index_search_backend": {
          "description": "Index storage backend",
          "type": "string",
          "default": ""
        },
        "index_search_hostname": {
          "description": "Index storage hostname",
          "type": "string",
          "default": ""
        },
        "spark_master": {
          "description": "Spark master",
          "type": "string",
          "default": "local[*]"
        },
        "log_level": {
          "description": "Log level",
          "type": "string",
          "default": "INFO",
          "enum": [
            "OFF",
            "FATAL",
            "ERROR",
            "WARN",
            "INFO",
            "DEBUG",
            "TRACE",
            "ALL"
          ]
        },
        "background_tasks_threads": {
          "description": "threads to dedicate to background processes",
          "type": "string",
          "default": "1"
        }
      },
      "required": [
        "gremlin_graph_reader",
        "storage_hostname",
        "keyspace",
        "queue_host",
        "spark_master",
        "log_level"
      ]
    }
  }
}
