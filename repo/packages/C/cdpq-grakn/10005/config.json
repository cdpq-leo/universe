{
  "type": "object",
  "properties": {
    "service": {
      "type": "object",
      "description": "DC/OS service configuration properties",
      "properties": {
        "name": {
          "description": "Name of this service instance.",
          "type": "string",
          "default": "grakn"
        },
        "cpus": {
          "description": "CPU shares to allocate to the Grakn instance.",
          "type": "number",
          "default": 0.5
        },
        "mem": {
          "description": "Memory to allocate to the Grakn instance.",
          "type": "number",
          "default": 8096
        },
        "disk": {
          "description": "Disk (MB) to allocate to the Grakn instance.",
          "type": "number",
          "default": 4096
        }
      }
    },
    "networking": {
      "type": "object",
      "description": "Configure the networking for your service.",
      "properties": {
        "service_endpoint_01": {
          "type": "object",
          "description": "DC/OS can automatically generate a Service Address to connect to each of your load balanced endpoints.",
          "properties": {
            "container_port": {
              "description": "Container port number",
              "type": "number",
              "default": 4567
            },
            "host_port": {
              "description": "Host port number",
              "type": "number",
              "default": 0
            },
            "protocol": {
              "type": "string",
              "description": "Protocol can be UDP, TCP or both. i.e. : \"udp\", \"tcp\", \"udp, tcp\". Most services will use TCP",
              "default": "tcp"
            },
            "load_balance_port": {
              "type": "number",
              "description": "This port will be used to load balance this service address internally",
              "default": 4567
            }
          }
        },
        "service_endpoint_02": {
          "type": "object",
          "description": "DC/OS can automatically generate a Service Address to connect to each of your load balanced endpoints.",
          "properties": {
            "container_port": {
              "description": "Container port number",
              "type": "number",
              "default": 48555
            },
            "host_port": {
              "description": "Host port number",
              "type": "number",
              "default": 0
            },
            "protocol": {
              "type": "string",
              "description": "Protocol can be UDP, TCP or both. i.e. : \"udp\", \"tcp\", \"udp, tcp\". Most services will use TCP",
              "default": "tcp"
            },
            "load_balance_port": {
              "type": "number",
              "description": "This port will be used to load balance this service address internally",
              "default": 48555
            }
          }
        },
        "marathon_lb_proxy": {
          "type": "object",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "vhost": {
              "type": "string"
            },
            "path": {
              "type": "string",
              "default": "/"
            }
          }
        }
      }
    },
    "volumes": {
      "type": "object",
      "description": "Service storage configuration properties",
      "properties": {
        "volume_data": {
          "description": "Volume configurations (root, mount, external). Please read Pre-Install Notes for setup for volumes.",
          "type": "object",
          "properties": {
            "container_path": {
              "description": "The path of a volume on the container.",
              "type": "string",
              "default": "/var/opt/grakn"
            },
            "type": {
              "description": "The type of a volume (ROOT, MOUNT, External) on the host to be used for persisting your service configuration and data.",
              "type": "string",
              "default": "ROOT"
            },
            "size": {
              "type": "integer",
              "description": "The amount of disk, in MB, allocated to the volume, not applicable for external volume type.",
              "default": 0
            },
            "profile": {
              "type": "string",
              "description": "Disk profile to be used for volume."
            },
            "external_volume_name": {
              "type": "string",
              "description": "External volume name, not applicable for ROOT and MOUNT volume types."
            }
          }
        }
      }
    },
    "environment": {
      "type": "object",
      "description": "Grakn instance configuration properties",
      "properties": {
        "START_LOCAL_STORAGE": {
          "type": "boolean",
          "default": false
        },
        "BACKGROUND_TASKS_THREADS": {
          "type": "number",
          "default": 4
        },
        "SPARK_MASTER": {
          "type": "string",
          "default": "local[*]"
        },
        "LOG_LEVEL": {
          "type": "string",
          "default": "DEBUG"
        },
        "STORAGE_HOSTNAME": {
          "type": "string",
          "default": ""
        },
        "KEYSPACE": {
          "type": "string",
          "default": "grakn"
        }
      }
    },
    "fetch": {
      "type": "object",
      "description": "If your service requires additional files and/or archives of files, enter their URIs to download and, if necessary, extract these resources.",
      "properties": {
        "artifact_URI": {
          "type": "object",
          "properties": {
            "uri": {
              "type": "string",
              "default": "file:///opt/mesosphere/etc/mesos-scheduler-modules/docker.tar.gz"
            },
            "extract": {
              "type": "boolean",
              "default": true
            },
            "executable": {
              "type": "boolean",
              "default": false
            },
            "cache": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    }
  }
}