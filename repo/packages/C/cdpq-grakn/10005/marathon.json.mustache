{
  "id": "{{service.name}}",
  "instances": {{service.instances}},
  "cpus": {{service.cpus}},
  "mem": {{service.mem}},
  "disk": {{service.disk}},
  {{#service.cmd}}
  "cmd": "{{service.cmd}}",
  {{/service.cmd}}
  "backoffSeconds": {{service.back_off_seconds}},
  "backoffFactor": {{service.back_off_factor}},
  "maxLaunchDelaySeconds": {{service.max_launch_delay_seconds}},
  "networks": [
    {
      "mode": "container/bridge"
    }
  ],
  "acceptedResourceRoles": [
    "*"
  ],
  "container": {
    "type": "DOCKER",
    "docker": {
      "image": "{{resource.assets.container.docker.image}}",
      "forcePullImage": true,
      "privileged": false,
      "parameters": []
    },
    "volumes":
      [
        {{^volumes.volume_data.external_volume_name}}
        {
          "containerPath": "data",
          "mode": "RW",
          "persistent": {
            "size": {{service.disk}},
            "type": "{{volumes.volume_data.type}}",
            {{#volumes.volume_data.profile}}
            "profileName": "{{volumes.volume_data.profile}}",
            {{/volumes.volume_data.profile}}
            "constraints": []
          }
        },
        {
           "containerPath": "{{volumes.volume_data.container_path}}/data",
           "hostPath": "data",
           "mode": "RW"
        }
        {{/volumes.volume_data.external_volume_name}}
        {{#volumes.volume_data.external_volume_name}}
        {
          "containerPath": "{{volumes.volume_data.container_path}}/data",
          "external": {
            "name": "{{volumes.volume_data.external_volume_name}}",
            "provider": "dvdi",
            "options": { "dvdi/driver": "rexray" }
          },
          "mode": "RW"
        }
        {{/volumes.volume_data.external_volume_name}}
      ],
    "portMappings": [
      {
        {{#networking.service_endpoint_server.load_balance_port}}
        "labels": {
            "VIP_0": "/{{service.name}}:{{networking.service_endpoint_server.load_balance_port}}"
        },
        {{/networking.service_endpoint_server.load_balance_port}}
        "containerPort": {{networking.service_endpoint_server.container_port}},
        "hostPort": {{networking.service_endpoint_server.host_port}},
        {{#networking.service_endpoint_server.name}}
        "name": "{{networking.service_endpoint_server.name}}",
        {{/networking.service_endpoint_server.name}}
        "protocol": "{{networking.service_endpoint_server.protocol}}"
      },
      {
      {{#networking.service_endpoint_api.load_balance_port}}
      "labels": {
          "VIP_0": "/{{service.name}}:{{networking.service_endpoint_api.load_balance_port}}"
      },
      {{/networking.service_endpoint_api.load_balance_port}}
      "containerPort": {{networking.service_endpoint_api.container_port}},
      "hostPort": {{networking.service_endpoint_api.host_port}},
      {{#networking.service_endpoint_api.name}}
      "name": "{{networking.service_endpoint_api.name}}",
      {{/networking.service_endpoint_api.name}}
      "protocol": "{{networking.service_endpoint_api.protocol}}"
      },
      {
        {{#networking.service_endpoint_grpc.load_balance_port}}
        "labels": {
            "VIP_1": "/{{service.name}}:{{networking.service_endpoint_grpc.load_balance_port}}"
        },
        {{/networking.service_endpoint_grpc.load_balance_port}}
        "containerPort": {{networking.service_endpoint_grpc.container_port}},
        "hostPort": {{networking.service_endpoint_grpc.host_port}},
        {{#networking.service_endpoint_grpc.name}}
        "name": "{{networking.service_endpoint_grpc.name}}",
        {{/networking.service_endpoint_grpc.name}}
        "protocol": "{{networking.service_endpoint_grpc.protocol}}"
      }
    ]
  },
  "env": {
    "START_LOCAL_STORAGE": "{{environment.START_LOCAL_STORAGE}}",
    "STORAGE_HOSTNAME": "{{environment.STORAGE_HOSTNAME}}",
    "START_LOCAL_QUEUE": "{{environment.START_LOCAL_QUEUE}}",
    "QUEUE_HOST": "{{environment.QUEUE_HOST}}",
    "INDEX_SEARCH_BACKEND": "{{environment.INDEX_SEARCH_BACKEND}}",
    "INDEX_SEARCH_HOSTNAME": "{{environment.INDEX_SEARCH_HOSTNAME}}",
    "SPARK_MASTER": "{{environment.SPARK_MASTER}}",
    "GREMLIN_GRAPH_READER": "{{environment.GREMLIN_GRAPH_READER}}",
    "BACKGROUND_TASKS_THREADS": "{{environment.BACKGROUND_TASKS_THREADS}}",
    "LOG_LEVEL": "{{environment.LOG_LEVEL}}",
    "KEYSPACE": "{{environment.KEYSPACE}}"
  },
  "healthChecks": [
    {
      "gracePeriodSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.TCP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.TCP_protocol.advanced_health_checking_settings.max_failures}},
      "portIndex": {{health_checks.TCP_protocol.port_index}},
      "protocol": "TCP"
    }
  ],
  "labels": {
    {{#networking.marathon_lb_proxy.enabled}}
    "HAPROXY_GROUP": "external",
    "HAPROXY_0_ENABLED": "true",
    "HAPROXY_0_REDIRECT_TO_HTTPS": "true",
    "HAPROXY_0_VHOST": "{{networking.marathon_lb_proxy.vhost}}",
    {{#networking.marathon_lb_proxy.path}}
    "HAPROXY_0_PATH": "{{networking.marathon_lb_proxy.path}}",
    {{/networking.marathon_lb_proxy.path}}
    {{/networking.marathon_lb_proxy.enabled}}
    "DCOS_SERVICE_SCHEME": "http",
    "DCOS_SERVICE_NAME": "{{service.name}}",
    "DCOS_SERVICE_PORT_INDEX": "0"
  },
  "fetch": [
  {{#fetch.artifact_URI.uri}}
  {
    "uri": "{{fetch.artifact_URI.uri}}",
    "extract": {{fetch.artifact_URI.extract}},
    "executable": {{fetch.artifact_URI.executable}},
    "cache": {{fetch.artifact_URI.cache}}
  }
  {{/fetch.artifact_URI.uri}}
  ],
  "requirePorts": false,
  "upgradeStrategy": {
    "maximumOverCapacity": 1 ,
    "minimumHealthCapacity": 1
  },
  "killSelection": "YOUNGEST_FIRST",
  "unreachableStrategy": {
    "inactiveAfterSeconds": 0 ,
    "expungeAfterSeconds": 0
  }
}
