{
   "id": "{{service.name}}",
   "cpus": {{service.cpus}},
   "mem": {{service.mem}},
   "disk":{{service.disk}},
   "instances": {{service.instances}},
   {{#service.cmd}}
   "cmd": "{{service.cmd}}",
   {{/service.cmd}}
   "fetch": [
    {
      "uri": "{{service.artifact_URI.uri}}",
      "extract": {{service.artifact_URI.extract}},
      "executable": {{service.artifact_URI.executable}},
      "cache": {{service.artifact_URI.cache}}
    }
   ],
   "container":{
      "type": "DOCKER",
      "volumes": [
      {  {{! local_persistant_volume type}}
         "persistent": {
             "size": {{volumes.local_persistant_volume.size_MiB}}
         },
         "mode": "RW",
         "containerPath": "{{volumes.local_persistant_volume.container_path}}"
      }
      { {{! external_persistant_volume type}}
         "external": {
            "name": "{{volumes.external_persistant_volume.name}}",
            "provider": "dvdi",
            "options": {
               "dvdi/driver": "rexray"
            }
         },
         "mode": "RW",
         "containerPath": "{{volumes.external_persistant_volume.container_path}}"
      }
      { {{! host_volume type}}
        "containerPath": "{{volumes.host_volume.container_path}}",
        "hostPath": "{{volumes.host_volume.host_path}}",
        "mode": "{{volumes.host_volume.mode}}"
      }
      ],
      "docker":{
         "image":"{{resource.assets.container.docker.image}}",
         "forcePullImage":false,
         "privileged": false
      }  
   },
   "networks":[
      {
         "mode":"host"
      }
   ],
   "portDefinitions":[
         {
            {{#networking.service_endpoints.enable_load_balanced_service_address}}   
            "labels": {
               "VIP_0": "/{{service.name}}:{{networking.service_endpoints.load_balance_port}}"
            },
            {{/networking.service_endpoints.enable_load_balanced_service_address}}
            "port": {{networking.service_endpoints.port}},
            "protocol": "{{networking.service_endpoints.protocol}}",
            "name": "{{networking.service_endpoints.name}}"            
         }
   ],
   "healthChecks": 
   [
    { {{! command_protocol type}}
      "gracePeriodSeconds": {{health_checks.command_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.command_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.command_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.command_protocol.advanced_health_checking_settings.max_failures}},
      "delaySeconds": {{health_checks.command_protocol.advanced_health_checking_settings.delay_seconds}},
      "protocol": "COMMAND",
      "command": {
        "value": "{{health_checks.command_protocol.command}}"
      }
    },
    { {{! IP_protocol type}}
      "gracePeriodSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.grace_periods}},
      "intervalSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.intervals}},
      "timeoutSeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.timeout}},
      "maxConsecutiveFailures": {{health_checks.IP_protocol.advanced_health_checking_settings.max_failures}},
      "delaySeconds": {{health_checks.IP_protocol.advanced_health_checking_settings.delay_seconds}},
      "portIndex": 0,
      "path": "{{health_checks.IP_protocol.path}}",
      "protocol": "{{health_checks.IP_protocol.protocol}}",
      "ipProtocol": "{{health_checks.IP_protocol.IP_version}}"
    }
   ],
   "labels":{
      {{! UPDATE this section if you added labels in the config.json file}}
      "DCOS_SERVICE_SCHEME": "http",
      "DCOS_SERVICE_NAME": "{{service.name}}",
      "DCOS_SERVICE_PORT_INDEX": "0"
   },
   "env": {
      {{! UPDATE this section if you added environment variables in the config.json file}}
      {{#service.region}}
      "SERVICE_REGION": "{{service.region}}"
      {{/service.region}}
  }
}